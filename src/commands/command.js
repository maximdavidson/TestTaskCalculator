class Command{
   constructor(execute, undo, value){
      this.execute = execute;
      this.undo = undo;
      this.value = value;
   }
}


export default Command;







// В этом коде создается класс Command, который представляет собой обобщенную команду в паттерне “Команда”.
// У этого класса есть три свойства:

// execute: Это функция, которая определяет, что должна делать команда при ее выполнении. Эта функция принимает текущее значение и значение команды в качестве аргументов.
// undo: Это функция, которая определяет, как отменить выполнение команды. Эта функция также принимает текущее значение и значение команды в качестве аргументов.
// value: Это значение, которое будет использоваться функциями execute и undo.
// Когда вы создаете экземпляр класса Command, вы передаете функции execute и undo, а также значение в конструктор. Это позволяет вам определить поведение команды 
// при ее создании. Это очень гибкий подход, поскольку он позволяет вам создавать различные команды с различным поведением, используя один и тот же класс Command.

// В контексте вашего калькулятора, каждая кнопка может быть представлена как команда с определенным поведением, которое определяется функциями execute и undo. 
// Когда кнопка нажимается, выполняется соответствующая команда. Если пользователь решает отменить последнюю операцию, вызывается функция undo последней команды. 
// Это позволяет легко добавить функциональность отмены в ваш калькулятор.